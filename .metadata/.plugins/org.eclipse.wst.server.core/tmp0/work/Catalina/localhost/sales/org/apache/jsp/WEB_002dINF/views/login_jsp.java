/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2024-11-16 07:51:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/comunus186/Desktop/test/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/sales/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1677670435855L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\" class=\"light-style \">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\">\r\n");
      out.write("    <title>Sales Management</title>\r\n");
      out.write("    <meta name=\"description\" content=\"\" />\r\n");
      out.write("    <link rel=\"icon\" type=\"image/x-icon\" href=\"img/favicon.ico\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"fonts/boxicons.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/style.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"loader\" style=\"display: none;\" ><img src=\"img/loading.gif\"> </div> \r\n");
      out.write("    <div class=\"container-xxl\">\r\n");
      out.write("        <div class=\"authentication-wrapper authentication-basic container-p-y\">\r\n");
      out.write("            <div class=\"authentication-inner\">\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                        <div class=\"app-brand justify-content-center\">\r\n");
      out.write("                            \r\n");
      out.write("                            ");
      out.write("\r\n");
      out.write("                               \r\n");
      out.write("                             ");
      out.write("\r\n");
      out.write("							 <span class=\"brand-logo demo\"> <img src=\"img/logo.svg\">\r\n");
      out.write("							</span>\r\n");
      out.write("\r\n");
      out.write("							 <span class=\"app-brand-text demo text-body fw-bolder\"> </span>\r\n");
      out.write("                           	\r\n");
      out.write("                        </div>\r\n");
      out.write("                        ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        <form id=\"formAuthentication\" class=\"mb-3\" action=\"login\" method=\"POST\" onsubmit=\"return checkLogin()\">\r\n");
      out.write("                            <div class=\"mb-3\">\r\n");
      out.write("                                <label for=\"email\" class=\"form-label\">Email </label>\r\n");
      out.write("                                <input type=\"text\" class=\"form-control\" id=\"email\" name=\"username\"  tabindex=\"1\" onchange=\"return isSpclCharEmail(this)\" onkeyup=\"removewaring()\" placeholder=\"Enter your email\" />\r\n");
      out.write("                                <span id=\"client1\"></span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"mb-3 form-password-toggle\">\r\n");
      out.write("                                <div class=\"d-flex justify-content-between\">\r\n");
      out.write("                                    <label class=\"form-label\" for=\"password\">Password</label>\r\n");
      out.write("                                    <span id=\"message\" toggle=\"#loginpassword\" class=\"fa fa-fw fa-eye field-icon toggle-password2\"></span>\r\n");
      out.write("                                    <span id=\"client2\"></span>\r\n");
      out.write("                                 \r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"input-group input-group-merge\">\r\n");
      out.write("                                    <input type=\"password\" id=\"password\" class=\"form-control\" tabindex=\"2\" name=\"password\" placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\" aria-describedby=\"password\" />\r\n");
      out.write("                                    <span class=\"input-group-text cursor-pointer\"><i class=\"bx bx-hide\"></i></span>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"col-md-12\">\r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <div class=\"CaptchaWrap\">\r\n");
      out.write("                                        <div id=\"CaptchaImageCode\" class=\"CaptchaTxtField\">\r\n");
      out.write("                                            <canvas id=\"CapCode\" class=\"capcode\"></canvas>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                       <button type=\"button\" class=\"ReloadBtn\" onclick='CreateCaptcha();' style=\"background: none; border: none;\">\r\n");
      out.write("                                            <img src=\"img/reload.png\" alt=\"Reload Captcha\" style=\"width: 36px; height: 26px;\">\r\n");
      out.write("                                        </button>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <input type=\"text\" id=\"UserCaptchaCode\" class=\"form-control\" tabindex=\"3\" placeholder='Enter Captcha - Case Sensitive' onkeyup=\"funForHide(); removewaring()\">\r\n");
      out.write("                                    <span id=\"WrongCaptchaError\" class=\"error\"></span>\r\n");
      out.write("                                    <span id=\"SuccessMessage2\" class=\"success\"></span>\r\n");
      out.write("                                    <span id=\"client3\"></span>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                              <div class=\"mb-3\">\r\n");
      out.write("                <!-- <div class=\"form-check\">\r\n");
      out.write("                  <input class=\"form-check-input\" type=\"checkbox\" name=\"remember-me\" />\r\n");
      out.write("                  <label class=\"form-check-label\" for=\"remember-me\"> Remember Me </label>\r\n");
      out.write("                </div> -->\r\n");
      out.write("              </div>\r\n");
      out.write("                            <div class=\"mb-3\">\r\n");
      out.write("                                <button class=\"btn btn-primary d-grid w-100\" type=\"submit\">Sign in</button>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"text-center\"> \r\n");
      out.write("                               <a href=\"password\" tabindex=\"-1\"> <small>Forgot Password?</small>\r\n");
      out.write("											</a></div>\r\n");
      out.write("                        </form>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"js/jquery.js\"></script>\r\n");
      out.write("    <script src=\"js/popper.js\"></script>\r\n");
      out.write("    <script src=\"js/bootstrap.js\"></script>\r\n");
      out.write("    <script src=\"js/helpers.js\"></script>\r\n");
      out.write("    <script src=\"js/perfect-scrollbar.js\"></script>\r\n");
      out.write("    <script src=\"js/menu.js\"></script>\r\n");
      out.write("    <script src=\"js/main.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("    \r\n");
      out.write("//     $(document).ready(function() {\r\n");
      out.write("//         $('#formAuthentication').submit(function(event) {\r\n");
      out.write("// //             event.preventDefault();\r\n");
      out.write("            \r\n");
      out.write("//             $(\"#loader\").show(); \r\n");
      out.write("\r\n");
      out.write("//         });\r\n");
      out.write("//     });\r\n");
      out.write("    \r\n");
      out.write("        function checkLogin() {\r\n");
      out.write("            var email = document.getElementById(\"email\").value;\r\n");
      out.write("            var loginpassword = document.getElementById('password').value;\r\n");
      out.write("            //var UserCaptchaCode = document.getElementById('UserCaptchaCode').value;\r\n");
      out.write("            if (document.getElementById('email').value == \"\") {\r\n");
      out.write("                document.getElementById(\"client1\").innerHTML = \"Please Enter Email ID\";\r\n");
      out.write("                document.getElementById(\"client1\").style.color = \"Red\";\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            if (document.getElementById('password').value == \"\") {\r\n");
      out.write("                document.getElementById(\"client2\").innerHTML = \"Please Enter Password\";\r\n");
      out.write("                document.getElementById(\"client2\").style.color = \"Red\";\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            if (document.getElementById('UserCaptchaCode').value == \"\") {\r\n");
      out.write("                document.getElementById(\"client3\").innerHTML = \"Please Enter Captcha Code\";\r\n");
      out.write("                document.getElementById(\"client3\").style.color = \"Red\";\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            var result = ValidateCaptcha();\r\n");
      out.write("            if ($(\"#UserCaptchaCode\").val() == \"\" || $(\"#UserCaptchaCode\").val() == null || $(\"#UserCaptchaCode\").val() == \"undefined\") {\r\n");
      out.write("                $('#WrongCaptchaError').text('Please enter code given below in a picture.').show();\r\n");
      out.write("                $('#UserCaptchaCode').focus();\r\n");
      out.write("                return false;\r\n");
      out.write("            } else {\r\n");
      out.write("                if (result == false) {\r\n");
      out.write("                    $('#WrongCaptchaError').text('Invalid Captcha! Please try again.').show();\r\n");
      out.write("                    CreateCaptcha();\r\n");
      out.write("                    $('#UserCaptchaCode').focus().select();\r\n");
      out.write("                    return false;\r\n");
      out.write("                } else {\r\n");
      out.write("                    $('#WrongCaptchaError').fadeOut(100);\r\n");
      out.write("                    $('#SuccessMessage2').fadeIn(500).css('display', 'block').delay(5000).fadeOut(250);\r\n");
      out.write("                    $(\"#loader\").show();\r\n");
      out.write("                    return true;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function funForHide() {\r\n");
      out.write("            document.getElementById(\"WrongCaptchaError\").innerHTML = \"\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        $(function () {\r\n");
      out.write("            CreateCaptcha();\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        var cd;\r\n");
      out.write("        function CreateCaptcha() {\r\n");
      out.write("            var alpha = new Array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9');\r\n");
      out.write("\r\n");
      out.write("            var a = alpha[Math.floor(Math.random() * alpha.length)];\r\n");
      out.write("            var b = alpha[Math.floor(Math.random() * alpha.length)];\r\n");
      out.write("            var c = alpha[Math.floor(Math.random() * alpha.length)];\r\n");
      out.write("            var d = alpha[Math.floor(Math.random() * alpha.length)];\r\n");
      out.write("\r\n");
      out.write("            cd = a + ' ' + b + ' ' + c + ' ' + d;\r\n");
      out.write("            $('#CaptchaImageCode').empty().append('<canvas id=\"CapCode\" class=\"capcode\" width=\"280\" height=\"40\"></canvas>');\r\n");
      out.write("\r\n");
      out.write("            var c = document.getElementById(\"CapCode\"),\r\n");
      out.write("                ctx = c.getContext(\"2d\"),\r\n");
      out.write("                x = c.width / 2,\r\n");
      out.write("                img = new Image();\r\n");
      out.write("\r\n");
      out.write("            img.src = \"img/captcha-bg.png\";\r\n");
      out.write("            img.onload = function () {\r\n");
      out.write("                var pattern = ctx.createPattern(img, \"repeat\");\r\n");
      out.write("                ctx.fillStyle = pattern;\r\n");
      out.write("                ctx.fillRect(0, 0, c.width, c.height);\r\n");
      out.write("                ctx.font = \"24px Roboto Slab\";\r\n");
      out.write("                ctx.fillStyle = '#1d2946';\r\n");
      out.write("                ctx.textAlign = 'center';\r\n");
      out.write("                ctx.fillText(cd, x, 28);\r\n");
      out.write("            };\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function ValidateCaptcha() {\r\n");
      out.write("            var string1 = removeSpaces(cd);\r\n");
      out.write("            var string2 = removeSpaces($('#UserCaptchaCode').val());\r\n");
      out.write("            return string1 == string2;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function removeSpaces(string) {\r\n");
      out.write("            return string.split(' ').join('');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function removewaring() {\r\n");
      out.write("            document.getElementById(\"client1\").innerHTML = \"\";\r\n");
      out.write("            document.getElementById(\"client2\").innerHTML = \"\";\r\n");
      out.write("            document.getElementById(\"client3\").innerHTML = \"\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function isSpclCharEmail(obj) {\r\n");
      out.write("            var x = obj.value;\r\n");
      out.write("            var atpos = x.indexOf(\"@\");\r\n");
      out.write("            var dotpos = x.lastIndexOf(\".\");\r\n");
      out.write("            if (atpos < 1 || dotpos < atpos + 2 || dotpos + 2 >= x.length) {\r\n");
      out.write("                document.getElementById(\"client1\").innerHTML = \"Please Enter valid email ID\";\r\n");
      out.write("                document.getElementById(\"client1\").style.color = \"Red\";\r\n");
      out.write("                obj.focus();\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("  <!--  <script type=\"text/javascript\">\r\n");
      out.write("    // Access the 'logoId' value from the server-side model and alert it\r\n");
      out.write("    var logoId = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${logoId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("    alert(\"Logo ID: \" + logoId);\r\n");
      out.write("</script> -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                        ");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                        ");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/login.jsp(37,24) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty errorMessage}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                        <p class=\"mb-4\" style=\"color: red;\"> ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${errorMessage }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</p>\r\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                        <h5 class=\"mb-4\">Please sign-in to your account </h5>\r\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
