/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2024-11-16 07:51:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class create_002dclient_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fn:contains", org.apache.taglibs.standard.functions.Functions.class, "contains", new Class[] {java.lang.String.class, java.lang.String.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-5.5.0.jar", Long.valueOf(1717502106570L));
    _jspx_dependants.put("/WEB-INF/views/header.jsp", Long.valueOf(1726815258729L));
    _jspx_dependants.put("/WEB-INF/views/footer.jsp", Long.valueOf(1724915024623L));
    _jspx_dependants.put("jar:file:/C:/Users/comunus186/Desktop/test/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/sales/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
    _jspx_dependants.put("jar:file:/C:/Users/comunus186/Desktop/test/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/sales/WEB-INF/lib/spring-security-taglibs-5.5.0.jar!/META-INF/security.tld", Long.valueOf(1620979858000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1677670435855L));
    _jspx_dependants.put("jar:file:/C:/Users/comunus186/Desktop/test/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/sales/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153365282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody.release();
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\" class=\"light-style  \">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\" />\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("	content=\"width=device-width, initial-scale=1,maximum-scale=1,user-scalable=0\">\r\n");
      out.write("<title>Sales Management</title>\r\n");
      out.write("<meta name=\"description\" content=\"\" />\r\n");
      out.write("<link rel=\"icon\" type=\"image/x-icon\" href=\"img/favicon.ico\" />\r\n");
      out.write("<!-- Icons.  icon fonts -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"fonts/boxicons.css\" />\r\n");
      out.write("<!-- Core CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap-datetimepicker.min.css\" />\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/select2.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Reminder Notifications</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"fonts/boxicons.css\" />\r\n");
      out.write("    <!-- Core CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/bootstrap-datetimepicker.min.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/style.css\" />\r\n");
      out.write("    \r\n");
      out.write("     <!-- Core JS -->\r\n");
      out.write("    <script src=\"js/jquery.js\"></script>\r\n");
      out.write("    <script src=\"js/popper.js\"></script>\r\n");
      out.write("    <script src=\"js/bootstrap.js\"></script>\r\n");
      out.write("    <script src=\"js/chart.js\"></script>\r\n");
      out.write("    <script src=\"js/filter-multi-select-bundle.min.js\"></script>\r\n");
      out.write("    <script src=\"js/helpers.js\"></script>\r\n");
      out.write("    <script src=\"js/perfect-scrollbar.js\"></script>\r\n");
      out.write("    <script src=\"js/dataTables.js\"></script>\r\n");
      out.write("    <script src=\"js/dataTables.bootstrap5.js\"></script>\r\n");
      out.write("    <script src=\"js/moment.min.js\"></script>\r\n");
      out.write("    <script src=\"js/bootstrap-datetimepicker.min.js\"></script>\r\n");
      out.write("      <script src=\"js/menu.js\"></script>\r\n");
      out.write("  \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header id=\"header\" class=\"header fixed-top\">\r\n");
      out.write("    <div class=\"container-fluid d-flex align-items-center justify-content-between\">\r\n");
      out.write("    <div class=\"d-flex align-items-center justify-content-between\">\r\n");
      out.write("     <i class=\"bx bx-menu mobile-nav-toggle\"> </i>\r\n");
      out.write("     ");
      if (_jspx_meth_sec_005fauthentication_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("       ");
      if (_jspx_meth_sec_005fauthorize_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        ");
      if (_jspx_meth_sec_005fauthorize_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        ");
      if (_jspx_meth_sec_005fauthorize_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("       </div>\r\n");
      out.write("       \r\n");
      out.write("      <nav id=\"navbar\" class=\"navbar \">\r\n");
      out.write("        <ul>\r\n");
      out.write("        ");
      if (_jspx_meth_sec_005fauthorize_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        ");
      if (_jspx_meth_sec_005fauthorize_005f4(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        ");
      if (_jspx_meth_sec_005fauthorize_005f5(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        </ul>\r\n");
      out.write("\r\n");
      out.write("      </nav><!-- .navbar -->\r\n");
      out.write("       					\r\n");
      out.write("                        \r\n");
      out.write("       <ul class=\"navbar-nav flex-row align-items-center \">\r\n");
      out.write("              <!-- User -->\r\n");
      out.write("              \r\n");
      out.write("              <li class=\"nav-item navbar-dropdown dropdown-user dropdown\">\r\n");
      out.write("                <a class=\"nav-link dropdown-toggle hide-arrow\" href=\"javascript:void(0);\" data-bs-toggle=\"dropdown\">\r\n");
      out.write("                \r\n");
      out.write("                    <div class=\"d-flex align-items-center\">\r\n");
      out.write("                        <div class=\"flex-shrink-0 me-2\">\r\n");
      out.write("                            <div class=\"avatar avatar-online\">\r\n");
      out.write("                                <img src=\"img/profile.png\" alt class=\"w-px-40 h-auto rounded-circle\" />\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                     <div class=\"flex-grow-1\">\r\n");
      out.write("    <span class=\"fw-semibold d-block\">\r\n");
      out.write("        ");
      if (_jspx_meth_sec_005fauthentication_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        ");
      if (_jspx_meth_sec_005fauthorize_005f6(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    </span>\r\n");
      out.write("    ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                </a>\r\n");
      out.write("                <ul class=\"dropdown-menu dropdown-menu-end\">\r\n");
      out.write("                    <li>\r\n");
      out.write("                     <a class=\"dropdown-item\" href=\"profile\">\r\n");
      out.write("                            <i class=\"bx bx-user me-2\"></i>\r\n");
      out.write("                            <span class=\"align-middle\">Profile </span>\r\n");
      out.write("                        </a>\r\n");
      out.write("                        \r\n");
      out.write("                        <a class=\"dropdown-item\" href=\"changepassword\">\r\n");
      out.write("                            <i class=\"bx bx-lock me-2\"></i>\r\n");
      out.write("                            <span class=\"align-middle\">Change Password</span>\r\n");
      out.write("                        </a>\r\n");
      out.write("                        <a class=\"dropdown-item\" href=\"logout\">\r\n");
      out.write("                            <i class=\"bx bx-power-off me-2\"></i>\r\n");
      out.write("                            <span class=\"align-middle\">Log Out</span>\r\n");
      out.write("                        </a>\r\n");
      out.write("                        \r\n");
      out.write("                    </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("<div id=\"loader\" style=\"display: none;\"><img src=\"img/loading.gif\"></div>\r\n");
      out.write("\r\n");
      out.write("<!-- Modal addClient -->\r\n");
      out.write("<div class=\"modal fade\" id=\"reminderModal\" data-bs-backdrop=\"static\"\r\n");
      out.write("     data-bs-keyboard=\"false\" tabindex=\"-1\"\r\n");
      out.write("     aria-labelledby=\"addClientmodalLabel\" aria-hidden=\"true\">\r\n");
      out.write("    <div class=\"modal-dialog\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <h5 class=\"modal-title\" id=\"reminderModalLabel\">Reminder</h5>\r\n");
      out.write("                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <form id=\"reminderEditForm\">\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label for=\"remainderDate\" class=\"form-label\">Reminder Date Time</label>\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"remainderDate\" name=\"remainderDate\" placeholder=\"Enter Reminder Date Time\" />\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label for=\"remark\" class=\"form-label\">Remark</label>\r\n");
      out.write("                        	<textarea id=\"remark\" name=\"remark\" maxlength=\"200\" class=\"form-control\"></textarea>\r\n");
      out.write("                        <!-- <input type=\"text\" class=\"form-control\" id=\"remark\" name=\"remark\" placeholder=\"Enter Remark\" /> -->\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <input type=\"hidden\" id=\"id\" name=\"id\" />\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" onclick=\"rescheduleReminder()\">Reschedule Reminder</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-warning\" onclick=\"removeReminder()\">Close Reminder</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- Notification Modal -->\r\n");
      out.write("<div class=\"modal fade\" id=\"notificationModal\" tabindex=\"-6\" aria-labelledby=\"notificationModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("    <div class=\"modal-dialog\" style=\"max-width:320px;\">\r\n");
      out.write("        <div class=\"modal-content text-center\">\r\n");
      out.write("            <div class=\"modal-header justify-content-center\">\r\n");
      out.write("                <h5 class=\"modal-title\" id=\"notificationModalLabel\">Notification</h5>\r\n");
      out.write("              \r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <p id=\"notificationMessage\"></p>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer justify-content-center\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" onClick=\"window.location.reload();\">OK</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("  \r\n");
      out.write("    <script src=\"js/main.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("    function fetchTodayReminders() {\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url: \"todayReminders\",\r\n");
      out.write("            type: \"POST\",\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            data: JSON.stringify({}), \r\n");
      out.write("            success: function(response) {\r\n");
      out.write("                $('#reminderListNavid .badge').text(response);\r\n");
      out.write("            },\r\n");
      out.write("            error: function(xhr, status, error) {\r\n");
      out.write("                console.error(\"Failed to fetch reminders count:\", error);\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    fetchTodayReminders(); \r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("	$(document).ready(function() {\r\n");
      out.write("	    // Check for Notification API support and request permission\r\n");
      out.write("	    if (!(\"Notification\" in window)) {\r\n");
      out.write("	        console.log(\"This browser does not support desktop notification\");\r\n");
      out.write("	    } else if (Notification.permission === \"granted\") {\r\n");
      out.write("	        console.log(\"Notification permission granted\");\r\n");
      out.write("	    } else if (Notification.permission !== \"denied\") {\r\n");
      out.write("        	console.log(\"Notification permission denied!!!!!!!!!!\");\r\n");
      out.write("\r\n");
      out.write("	        Notification.requestPermission().then(function(permission) {\r\n");
      out.write("	            if (permission === \"granted\") {\r\n");
      out.write("	                console.log(\"Notification permission granted\");\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	    }\r\n");
      out.write("	    \r\n");
      out.write("	    // Function to fetch today's reminders\r\n");
      out.write("	    function fetchTodayReminde() {\r\n");
      out.write("	        $.ajax({\r\n");
      out.write("	            url: \"getDueReminders\",\r\n");
      out.write("	            type: \"POST\",\r\n");
      out.write("	            dataType: \"json\",\r\n");
      out.write("	            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("	            data: JSON.stringify({}),\r\n");
      out.write("	            success: function(response) {\r\n");
      out.write("	                console.log(response);\r\n");
      out.write("	                if (Array.isArray(response) && response.length > 0) {\r\n");
      out.write("	                    var reminderCount = response.length;\r\n");
      out.write("	                    console.log(\"Reminder Count: \" + reminderCount);\r\n");
      out.write("	\r\n");
      out.write("	                    response.forEach(function(reminder) {\r\n");
      out.write("	                        var remainderDate = reminder.remainderDate;\r\n");
      out.write("	                        var remark = reminder.remark;\r\n");
      out.write("	                        console.log(\"Reminder Date: \" + remainderDate);\r\n");
      out.write("	                        console.log(\"Remark: \" + remark);\r\n");
      out.write("	\r\n");
      out.write("	                        displayReminderPopUp(reminder);\r\n");
      out.write("	                    });\r\n");
      out.write("	                   /*  sessionStorage.setItem('reminderShown', 'true'); */\r\n");
      out.write("	                  //  console.log(sessionStorage.getItem('reminderShown'));\r\n");
      out.write("	                }\r\n");
      out.write("	            },\r\n");
      out.write("	            error: function(xhr, status, error) {\r\n");
      out.write("	                console.error(\"Failed to fetch reminders count:\", error);\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	    }\r\n");
      out.write("	   // fetchTodayReminde();\r\n");
      out.write("	   /*    function fetchRemindersPeriodically() {\r\n");
      out.write("	        fetchTodayReminde(); // Fetch initially\r\n");
      out.write("	\r\n");
      out.write("	        // Fetch reminders every 1 minute\r\n");
      out.write("	        setInterval(function() {\r\n");
      out.write("	            fetchTodayReminde();\r\n");
      out.write("	            console.log('last');\r\n");
      out.write("	        }, 30000); \r\n");
      out.write("	    } */\r\n");
      out.write("	\r\n");
      out.write("	    /*   function startPeriodicReminderFetching() {\r\n");
      out.write("	          console.log('::Interval');\r\n");
      out.write("	          fetchTodayReminde();\r\n");
      out.write("	          setInterval(fetchTodayReminde, 30000); // 2 minutes\r\n");
      out.write("	      } */\r\n");
      out.write("	\r\n");
      out.write("	   \r\n");
      out.write("	 // Check if the reminder has already been shown\r\n");
      out.write("	  /*   if (!sessionStorage.getItem('reminderShown')) {\r\n");
      out.write("	        console.log(\"Reminder not shown yet, fetching reminders.\");\r\n");
      out.write("	        fetchTodayReminde();\r\n");
      out.write("	    } else {\r\n");
      out.write("	        console.log(\"Reminder already shown\");\r\n");
      out.write("	         sessionStorage.setItem('reminderShown', 'true'); \r\n");
      out.write("	    } */\r\n");
      out.write("	    \r\n");
      out.write("	    // Initial fetch and display of reminders\r\n");
      out.write("	 //   fetchTodayReminde();\r\n");
      out.write("\r\n");
      out.write("	    // Periodically fetch reminders every 30 seconds\r\n");
      out.write("	    \r\n");
      out.write("	 /*    function startPeriodicReminderFetching() {\r\n");
      out.write("        // Fetch initially after 1 minute\r\n");
      out.write("        setTimeout(function() {\r\n");
      out.write("            fetchTodayReminders();\r\n");
      out.write("            // Fetch reminders every 2 minutes after the initial fetch\r\n");
      out.write("            setInterval(fetchTodayReminders, 120000); // 2 minutes\r\n");
      out.write("        }, 60000); // 1 minute\r\n");
      out.write("    }\r\n");
      out.write(" */\r\n");
      out.write("	    \r\n");
      out.write("	    \r\n");
      out.write("	\r\n");
      out.write("	    function displayReminderPopUp(reminder) {\r\n");
      out.write("	                console.log(\"Displaying reminder popup.\");\r\n");
      out.write("	\r\n");
      out.write("	        $('#remainderDate').val(reminder.remainderDate);\r\n");
      out.write("	        $('#remark').val(reminder.remark);\r\n");
      out.write("	        $('#id').val(reminder.id);\r\n");
      out.write("	\r\n");
      out.write("	        $('#reminderModal').modal('show');\r\n");
      out.write("	\r\n");
      out.write("	        if (Notification.permission === \"granted\") {\r\n");
      out.write("	        	console.log(\"Notification permission!!!!!!!!!!\");\r\n");
      out.write("	            var notificationTitle = \"Reminder\";\r\n");
      out.write("	            var notificationOptions = {\r\n");
      out.write("	            	 tag : reminder.id,\r\n");
      out.write("	                body: \"Reminder for: \" + reminder.remark,\r\n");
      out.write("	                icon: \"img/1.png\" // Path to your notification icon\r\n");
      out.write("	            };\r\n");
      out.write("	\r\n");
      out.write("	            var notification = new Notification(notificationTitle, notificationOptions);\r\n");
      out.write("	\r\n");
      out.write("	            // Handle notification click event\r\n");
      out.write("	            notification.onclick = function(event) {\r\n");
      out.write("	            	console.log(\"notification on click.\");\r\n");
      out.write("	                event.preventDefault(); // Prevent the browser from focusing the Notification's tab\r\n");
      out.write("	                $('#remainderDate').val(reminder.remainderDate);\r\n");
      out.write("	                $('#remark').val(reminder.remark);\r\n");
      out.write("	                $('#id').val(reminder.id);\r\n");
      out.write("	                $('#reminderModal').modal('show');\r\n");
      out.write("	            };\r\n");
      out.write("	        }\r\n");
      out.write("	    }\r\n");
      out.write("	    \r\n");
      out.write("	   // startPeriodicReminderFetching();\r\n");
      out.write("fetchTodayReminde();\r\n");
      out.write("	   // setInterval(fetchTodayReminde, 60000); // Adjust interval as needed\r\n");
      out.write("\r\n");
      out.write("	    \r\n");
      out.write("	    \r\n");
      out.write("   window.rescheduleReminder = function() {\r\n");
      out.write("    var formData = $(\"#reminderEditForm\").serializeArray();\r\n");
      out.write("    console.log('Form Data:', formData);\r\n");
      out.write("\r\n");
      out.write("    var reminderData = {};\r\n");
      out.write("    $.each(formData, function(i, v) {\r\n");
      out.write("      reminderData[v.name] = v.value;\r\n");
      out.write("    });\r\n");
      out.write("    console.log('Reminder Data:', reminderData);\r\n");
      out.write("\r\n");
      out.write("    $.ajax({\r\n");
      out.write("      url: \"update-reminder\",\r\n");
      out.write("      type: \"POST\",\r\n");
      out.write("      dataType: \"json\",\r\n");
      out.write("      contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("      data: JSON.stringify(reminderData),\r\n");
      out.write("      success: function(result) {\r\n");
      out.write("    	  $('#reminderModal').modal('hide');\r\n");
      out.write("          showNotificationModal('Reminder updated successfully');\r\n");
      out.write("       /*  alert('Reminder updated successfully');\r\n");
      out.write("        location.reload(); */ \r\n");
      out.write("      },\r\n");
      out.write("      error: function(error) {\r\n");
      out.write("        console.log('Update Error:', error);\r\n");
      out.write("        showNotificationModal('Failed to update the reminder');\r\n");
      out.write("      }\r\n");
      out.write("    });\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("    window.removeReminder = function() {\r\n");
      out.write("        var formData = $(\"#reminderEditForm\").serializeArray();\r\n");
      out.write("        console.log('Form Data:', formData);\r\n");
      out.write("\r\n");
      out.write("        var reminderData = {};\r\n");
      out.write("        $.each(formData, function(i, v) {\r\n");
      out.write("          reminderData[v.name] = v.value;\r\n");
      out.write("        });\r\n");
      out.write("        console.log('Reminder Data:', reminderData);\r\n");
      out.write("\r\n");
      out.write("        $.ajax({\r\n");
      out.write("          url: \"closeReminder\",\r\n");
      out.write("          type: \"POST\",\r\n");
      out.write("          dataType: \"json\",\r\n");
      out.write("          contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("          data: JSON.stringify(reminderData),\r\n");
      out.write("          success: function(result) {\r\n");
      out.write("        	  $('#reminderModal').modal('hide');\r\n");
      out.write("              showNotificationModal('Reminder closed successfully');\r\n");
      out.write("           // location.reload();\r\n");
      out.write("          },\r\n");
      out.write("          error: function(error) {\r\n");
      out.write("            console.log('Close Error:', error);\r\n");
      out.write("            showNotificationModal('Failed to close the reminder');\r\n");
      out.write("\r\n");
      out.write("          }\r\n");
      out.write("        });\r\n");
      out.write("      }\r\n");
      out.write("    // Clear session storage item on logout\r\n");
      out.write("   /*  $('a[href=\"logout\"]').on('click', function() {\r\n");
      out.write("        sessionStorage.removeItem('reminderShown');\r\n");
      out.write("        console.log(\"Session storage item 'reminderShown' removed.\");\r\n");
      out.write("    }); */\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("	$(function() {\r\n");
      out.write("		$('#remainderDate').datetimepicker({\r\n");
      out.write("			defaultDate : new Date(),\r\n");
      out.write("			format : 'DD/MM/YYYY HH:mm',\r\n");
      out.write("				minDate: new Date() \r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$(function() {\r\n");
      out.write("	    $('#reminderModal').on('shown.bs.modal', function() {\r\n");
      out.write("	        $('#reminderModal #remainderDate').datetimepicker({\r\n");
      out.write("	            defaultDate : new Date(),\r\n");
      out.write("				format : 'DD/MM/YYYY HH:mm',\r\n");
      out.write("				minDate: new Date()\r\n");
      out.write("	        });\r\n");
      out.write("	    });\r\n");
      out.write("	});\r\n");
      out.write("	 \r\n");
      out.write("	\r\n");
      out.write("	function showNotificationModal(message) {\r\n");
      out.write("	    $('#notificationMessage').text(message);\r\n");
      out.write("	    $('#notificationModal').modal('show');\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("	<!-- Layout wrapper -->\r\n");
      out.write("	<div class=\"layout-wrapper layout-content-navbar\">\r\n");
      out.write("		<div class=\"layout-container\">\r\n");
      out.write("\r\n");
      out.write("			<!-- / Menu -->\r\n");
      out.write("\r\n");
      out.write("			<!-- Layout container -->\r\n");
      out.write("			<div class=\"layout-page\">\r\n");
      out.write("				<!-- Navbar -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<!-- Content wrapper -->\r\n");
      out.write("				<div class=\"content-wrapper\">\r\n");
      out.write("					<!-- Content -->\r\n");
      out.write("					<div class=\"container-xxll flex-grow-1 container-p-y rightprofile\">\r\n");
      out.write("						<div class=\"row\">\r\n");
      out.write("							<!-- Basic Layout -->\r\n");
      out.write("							<div class=\"col-xxl\">\r\n");
      out.write("								<div class=\"card mb-4\">\r\n");
      out.write("									<div\r\n");
      out.write("										class=\"card-header d-flex align-items-center justify-content-between mb-0\">\r\n");
      out.write("										<h5 class=\"mb-0\">Create Client</h5>\r\n");
      out.write("										<div class=\"right-nav \">\r\n");
      out.write("											<ul>\r\n");
      out.write("												<li><a class=\"btn btn-secondary add-new btn-primary\"\r\n");
      out.write("													href=\"clientList\"><i class=\"bx bx-arrow-back me-1\"></i>\r\n");
      out.write("														Back </a></li>\r\n");
      out.write("											</ul>\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>\r\n");
      out.write("									<div class=\"card-body mt-4\">\r\n");
      out.write("										<form action=\"saveClient\" \r\n");
      out.write("											onSubmit=\"return validateClientDetailsForm()\" method=\"post\">\r\n");
      out.write("											<div class=\"row\">\r\n");
      out.write("												<div class=\"col-lg-6 col-md-6 col-sm-6\">\r\n");
      out.write("													<div class=\"form-group\">\r\n");
      out.write("														<label class=\"form-label\" for=\"clientName\">Client\r\n");
      out.write("															Name </label> <input type=\"text\" class=\"form-control\"\r\n");
      out.write("															id=\"clientName\" name=\"clientName\" onkeyup=\"removewaring()\"\r\n");
      out.write("															placeholder=\"Enter Client Name\" />\r\n");
      out.write("															<span id=\"clientName-span\"></span>\r\n");
      out.write("													</div>\r\n");
      out.write("												</div>\r\n");
      out.write("												<div class=\"col-lg-6 col-md-6 col-sm-6\">\r\n");
      out.write("													<div class=\"form-group\">\r\n");
      out.write("														<label class=\"form-label\" for=\"clientNation\">Client\r\n");
      out.write("															Nation </label> <input type=\"text\" class=\"form-control\"\r\n");
      out.write("															id=\"clientNation\" name=\"clientNation\" onkeyup=\"removewaring()\"\r\n");
      out.write("															placeholder=\"Enter Client Nation\" />\r\n");
      out.write("															<span id=\"clientNation-span\"></span>\r\n");
      out.write("													</div>\r\n");
      out.write("												</div>\r\n");
      out.write("												<div class=\"col-lg-6 col-md-6 col-sm-6\">\r\n");
      out.write("													<div class=\"form-group\">\r\n");
      out.write("														<label class=\"form-label\" for=\"Client Location\">Client\r\n");
      out.write("															Location </label> <input type=\"text\" class=\"form-control\"\r\n");
      out.write("															id=\"clientLocation\" name=\"clientLocation\" onkeyup=\"removewaring()\"\r\n");
      out.write("															placeholder=\"Enter Client Location\" />\r\n");
      out.write("															<span id=\"clientLocation-span\"></span>\r\n");
      out.write("													</div>\r\n");
      out.write("												</div>\r\n");
      out.write("												<div class=\"col-lg-6 col-md-6 col-sm-6\">\r\n");
      out.write("													<div class=\"form-group\">\r\n");
      out.write("														<label class=\"form-label\" for=\"clientAddress\">Client\r\n");
      out.write("															Address </label> <input type=\"text\" class=\"form-control\"\r\n");
      out.write("															id=\"clientAddress\" name=\"clientAddress\" onkeyup=\"removewaring()\"\r\n");
      out.write("															placeholder=\"Enter Client Address\" />\r\n");
      out.write("															<span id=\"clientAddress-span\"></span>\r\n");
      out.write("													</div>\r\n");
      out.write("												</div>\r\n");
      out.write("\r\n");
      out.write("												<hr>\r\n");
      out.write("\r\n");
      out.write("												<div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n");
      out.write("													<h4>Client Manager</h4>\r\n");
      out.write("												</div>\r\n");
      out.write("\r\n");
      out.write("												<div class=\"col-lg-6 col-md-6 col-sm-6\">\r\n");
      out.write("													<div class=\"form-group\">\r\n");
      out.write("														<label class=\"form-label\" for=\"name\">Manager Name\r\n");
      out.write("														</label> <input type=\"text\" class=\"form-control\" id=\"managername\"\r\n");
      out.write("															name=\"clientManagerDetails.managername\" onkeyup=\"removewaring()\"\r\n");
      out.write("															placeholder=\"Enter Name\" />\r\n");
      out.write("															<span id=\"managername-span\"></span>\r\n");
      out.write("													</div>\r\n");
      out.write("												</div>\r\n");
      out.write("												<div class=\"col-lg-6 col-md-6 col-sm-6\">\r\n");
      out.write("													<div class=\"form-group\">\r\n");
      out.write("														<label class=\"form-label\" for=\"mobile\">Mobile No</label> <input\r\n");
      out.write("															type=\"text\" maxlength=\"10\" class=\"form-control\" id=\"mobileno\"\r\n");
      out.write("															name=\"clientManagerDetails.mobileno\"  onkeyup=\"removewaring()\"\r\n");
      out.write("															placeholder=\"Enter Mobile\" /> \r\n");
      out.write("															<span id=\"mobileno-span\"></span>\r\n");
      out.write("													</div>\r\n");
      out.write("												</div>\r\n");
      out.write("												<div class=\"col-lg-6 col-md-6 col-sm-6\">\r\n");
      out.write("													<div class=\"form-group\">\r\n");
      out.write("														<label class=\"form-label\" for=\"emailId\">Email id </label>\r\n");
      out.write("														<input type=\"text\" class=\"form-control\" id=\"emailId\"\r\n");
      out.write("															name=\"clientManagerDetails.emailId\" onchange=\"return isSpclCharEmail(this)\" onkeyup=\"removewaring()\"\r\n");
      out.write("															placeholder=\"Enter Email id\" />\r\n");
      out.write("															 <span id=\"emailId-span\"></span>\r\n");
      out.write("													</div>\r\n");
      out.write("												</div>\r\n");
      out.write("												<div class=\"col-lg-6 col-md-6 col-sm-6\">\r\n");
      out.write("													<div class=\"form-group\">\r\n");
      out.write("														<label class=\"form-label\" for=\"designation\">Designation\r\n");
      out.write("														</label> <input type=\"text\" class=\"form-control\" id=\"designation\"\r\n");
      out.write("															name=\"clientManagerDetails.designation\" onkeyup=\"removewaring()\"\r\n");
      out.write("															placeholder=\"Enter Designation\" />\r\n");
      out.write("															<span id=\"designation-span\"></span>\r\n");
      out.write("													</div>\r\n");
      out.write("												</div>\r\n");
      out.write("												<div class=\"col-lg-6 col-md-6 col-sm-6\">\r\n");
      out.write("													<div class=\"form-group\">\r\n");
      out.write("														<label class=\"form-label\" for=\"department\">Department\r\n");
      out.write("															</label> <select class=\"form-control form-select select2\"\r\n");
      out.write("															id=\"departmentid\" onkeyup=\"removewaring()\"\r\n");
      out.write("															name=\"clientManagerDetails.departmentid\">\r\n");
      out.write("															<option disabled selected>Select</option>\r\n");
      out.write("															");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("														</select>\r\n");
      out.write("															<span id=\"department-span\"></span>\r\n");
      out.write("													</div>\r\n");
      out.write("												</div>\r\n");
      out.write("											</div>\r\n");
      out.write("											<button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n");
      out.write("\r\n");
      out.write("										</form>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("\r\n");
      out.write("							</div>\r\n");
      out.write("							<!-- Basic with Icons -->\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- / Content -->\r\n");
      out.write("\r\n");
      out.write("					<!-- Footer -->\r\n");
      out.write("						");
      out.write("		<!-- Footer -->\r\n");
      out.write("					<footer class=\"content-footer footer bg-footer-theme\">\r\n");
      out.write("						<div class=\"container-xxl   py-2 flex-md-row flex-column\">\r\n");
      out.write("							<div class=\"mb-2 mb-md-0 text-center\">Copyright ©\r\n");
      out.write("								Comunus All rights reserved.</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</footer>\r\n");
      out.write("					<!-- / Footer -->");
      out.write("\r\n");
      out.write("					<!-- / Footer -->\r\n");
      out.write("					<div class=\"content-backdrop fade\"></div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<!-- Content wrapper -->\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- / Layout page -->\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- Overlay -->\r\n");
      out.write("		<div class=\"layout-overlay layout-menu-toggle\"></div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- / Layout wrapper -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- Core JS \r\n");
      out.write("	<script src=\"js/jquery.js\"></script>\r\n");
      out.write("	<script src=\"js/popper.js\"></script>\r\n");
      out.write("	<script src=\"js/bootstrap.js\"></script>\r\n");
      out.write("	<script src=\"js/helpers.js\"></script>\r\n");
      out.write("	<script src=\"js/perfect-scrollbar.js\"></script>\r\n");
      out.write("	<script src=\"js/menu.js\"></script>\r\n");
      out.write("	<script src=\"js/select2.js\"></script>\r\n");
      out.write("	<script src=\"js/moment.min.js\"></script>\r\n");
      out.write("	<script src=\"js/bootstrap-datetimepicker.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("	<script src=\"js/main.js\"></script>-->\r\n");
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		function validateClientDetailsForm() {\r\n");
      out.write("			var clientName = $(\"#clientName\").val();\r\n");
      out.write("			var clientNation = $(\"#clientNation\").val();\r\n");
      out.write("			var clientLocation = $(\"#clientLocation\").val();\r\n");
      out.write("			var clientAddress = $(\"#clientAddress\").val();\r\n");
      out.write("			var managername = $(\"#managername\").val();\r\n");
      out.write("			var mobileno = $(\"#mobileno\").val();\r\n");
      out.write("			var emailId = $(\"#emailId\").val();\r\n");
      out.write("			var designation = $(\"#designation\").val();\r\n");
      out.write("			var departmentid = $(\"#departmentid\").val();\r\n");
      out.write("			\r\n");
      out.write("			 if (clientName == null || clientName == \"\") {\r\n");
      out.write("	                document.getElementById(\"clientName-span\").innerHTML = \"Please Enter Client Name\";\r\n");
      out.write("	                document.getElementById(\"clientName-span\").style.color = \"Red\";\r\n");
      out.write("	                return false;\r\n");
      out.write("	            }\r\n");
      out.write("			 if (clientNation == null || clientNation == \"\") {\r\n");
      out.write("	                document.getElementById(\"clientNation-span\").innerHTML = \"Please Enter Client Nation\";\r\n");
      out.write("	                document.getElementById(\"clientNation-span\").style.color = \"Red\";\r\n");
      out.write("	                return false;\r\n");
      out.write("	            }\r\n");
      out.write("			 if (clientLocation == null || clientLocation == \"\") {\r\n");
      out.write("	                document.getElementById(\"clientLocation-span\").innerHTML = \"Please Enter Client Location\";\r\n");
      out.write("	                document.getElementById(\"clientLocation-span\").style.color = \"Red\";\r\n");
      out.write("	                return false;\r\n");
      out.write("	            }\r\n");
      out.write("			 if (clientAddress == null || clientAddress == \"\") {\r\n");
      out.write("	                document.getElementById(\"clientAddress-span\").innerHTML = \"Please Enter Client Address\";\r\n");
      out.write("	                document.getElementById(\"clientAddress-span\").style.color = \"Red\";\r\n");
      out.write("	                return false;\r\n");
      out.write("	            }\r\n");
      out.write("			 if (managername == null || managername == \"\") {\r\n");
      out.write("	                document.getElementById(\"managername-span\").innerHTML = \"Please Enter Manager Name\";\r\n");
      out.write("	                document.getElementById(\"managername-span\").style.color = \"Red\";\r\n");
      out.write("	                return false;\r\n");
      out.write("	            }\r\n");
      out.write("			 if (mobileno == null || mobileno == \"\") {\r\n");
      out.write("	                document.getElementById(\"mobileno-span\").innerHTML = \"Please Enter Mobile no\";\r\n");
      out.write("	                document.getElementById(\"mobileno-span\").style.color = \"Red\";\r\n");
      out.write("	                return false;\r\n");
      out.write("	            }\r\n");
      out.write("			 if (emailId == null || emailId == \"\") {\r\n");
      out.write("	                document.getElementById(\"emailId-span\").innerHTML = \"Please Enter Email id\";\r\n");
      out.write("	                document.getElementById(\"emailId-span\").style.color = \"Red\";\r\n");
      out.write("	                return false;\r\n");
      out.write("	            }\r\n");
      out.write("			 if (designation == null || designation == \"\") {\r\n");
      out.write("	                document.getElementById(\"designation-span\").innerHTML = \"Please Enter Designation\";\r\n");
      out.write("	                document.getElementById(\"designation-span\").style.color = \"Red\";\r\n");
      out.write("	                return false;\r\n");
      out.write("	            }\r\n");
      out.write("			 if (departmentid == null || departmentid == \"\") {\r\n");
      out.write("	                document.getElementById(\"department-span\").innerHTML = \"Please Select Department \";\r\n");
      out.write("	                document.getElementById(\"department-span\").style.color = \"Red\";\r\n");
      out.write("	                return false;\r\n");
      out.write("	            }\r\n");
      out.write("			return true;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		$(\"#mobileno\").on(\"input\", function() {\r\n");
      out.write("			var budget = $(this).val();\r\n");
      out.write("			if (!/^\\d*$/.test(budget)) {\r\n");
      out.write("				$(this).val(budget.replace(/[^\\d]/g, '')); // Remove non-numeric characters\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		 function isSpclCharEmail(obj) {\r\n");
      out.write("	            var x = obj.value;\r\n");
      out.write("	            var atpos = x.indexOf(\"@\");\r\n");
      out.write("	            var dotpos = x.lastIndexOf(\".\");\r\n");
      out.write("	            if (atpos < 1 || dotpos < atpos + 2 || dotpos + 2 >= x.length) {\r\n");
      out.write("	                document.getElementById(\"emailId-span\").innerHTML = \"Please Enter valid email ID\";\r\n");
      out.write("	                document.getElementById(\"emailId-span\").style.color = \"Red\";\r\n");
      out.write("	                obj.focus();\r\n");
      out.write("	                return false;\r\n");
      out.write("	            }\r\n");
      out.write("	        }\r\n");
      out.write("		 \r\n");
      out.write("		   function removewaring() {\r\n");
      out.write("	            document.getElementById(\"clientName-span\").innerHTML = \"\";\r\n");
      out.write("	            document.getElementById(\"clientNation-span\").innerHTML = \"\";\r\n");
      out.write("	            document.getElementById(\"clientLocation-span\").innerHTML = \"\";\r\n");
      out.write("	            document.getElementById(\"clientAddress-span\").innerHTML = \"\";\r\n");
      out.write("	            document.getElementById(\"managername-span\").innerHTML = \"\";\r\n");
      out.write("	            document.getElementById(\"mobileno-span\").innerHTML = \"\";\r\n");
      out.write("	            document.getElementById(\"emailId-span\").innerHTML = \"\";\r\n");
      out.write("	            document.getElementById(\"designation-span\").innerHTML = \"\";\r\n");
      out.write("	            document.getElementById(\"department-span\").innerHTML = \"\";\r\n");
      out.write("	        }\r\n");
      out.write("\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_sec_005fauthentication_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_sec_005fauthentication_005f0 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_sec_005fauthentication_005f0_reused = false;
    try {
      _jspx_th_sec_005fauthentication_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthentication_005f0.setParent(null);
      // /WEB-INF/views/header.jsp(35,5) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthentication_005f0.setVar("user");
      // /WEB-INF/views/header.jsp(35,5) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthentication_005f0.setProperty("principal");
      int _jspx_eval_sec_005fauthentication_005f0 = _jspx_th_sec_005fauthentication_005f0.doStartTag();
      if (_jspx_th_sec_005fauthentication_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody.reuse(_jspx_th_sec_005fauthentication_005f0);
      _jspx_th_sec_005fauthentication_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthentication_005f0, _jsp_getInstanceManager(), _jspx_th_sec_005fauthentication_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f0 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f0_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f0.setParent(null);
      // /WEB-INF/views/header.jsp(37,7) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f0.setAccess("hasRole('ADMIN') ");
      int _jspx_eval_sec_005fauthorize_005f0 = _jspx_th_sec_005fauthorize_005f0.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("      <a href=\"userList\" class=\"logo d-flex align-items-center\">\r\n");
        out.write("        <img src=\"img/logo.svg\" alt=\"\">\r\n");
        out.write("      </a>\r\n");
        out.write("       ");
      }
      if (_jspx_th_sec_005fauthorize_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f0);
      _jspx_th_sec_005fauthorize_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f0, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f1 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f1_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f1.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f1.setParent(null);
      // /WEB-INF/views/header.jsp(42,8) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f1.setAccess("hasRole('CH') ");
      int _jspx_eval_sec_005fauthorize_005f1 = _jspx_th_sec_005fauthorize_005f1.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("      <a href=\"dashboard\" class=\"logo d-flex align-items-center\">\r\n");
        out.write("        <img src=\"img/logo.svg\" alt=\"\">\r\n");
        out.write("      </a>\r\n");
        out.write("       ");
      }
      if (_jspx_th_sec_005fauthorize_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f1);
      _jspx_th_sec_005fauthorize_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f1, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f2 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f2_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f2.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f2.setParent(null);
      // /WEB-INF/views/header.jsp(47,8) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f2.setAccess("not(hasAnyRole('ADMIN', 'CH'))");
      int _jspx_eval_sec_005fauthorize_005f2 = _jspx_th_sec_005fauthorize_005f2.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("      <a href=\"leadList\" class=\"logo d-flex align-items-center\">\r\n");
        out.write("        <img src=\"img/logo.svg\" alt=\"\">\r\n");
        out.write("      </a>\r\n");
        out.write("       ");
      }
      if (_jspx_th_sec_005fauthorize_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f2);
      _jspx_th_sec_005fauthorize_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f2, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f3 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f3_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f3.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f3.setParent(null);
      // /WEB-INF/views/header.jsp(56,8) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f3.setAccess("not(hasAnyRole('BDE', 'ZH'))");
      int _jspx_eval_sec_005fauthorize_005f3 = _jspx_th_sec_005fauthorize_005f3.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("\r\n");
        out.write("         <li>\r\n");
        out.write("         <!-- <a href=\"userList\">Users</a> -->\r\n");
        out.write("         <div class=\"dropdown\">\r\n");
        out.write("			  <a class=\"dropdown-toggle hide-arrow\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n");
        out.write("			    Operations\r\n");
        out.write("			  </a>			\r\n");
        out.write("			  <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n");
        out.write("			    <li>\r\n");
        out.write("			    <a class=\"dropdown-item\" href=\"userList\">\r\n");
        out.write("                            <span class=\"align-middle\">Users List</span>\r\n");
        out.write("                        </a>\r\n");
        out.write("                        \r\n");
        out.write("			   \r\n");
        out.write("			   <a class=\"dropdown-item\" href=\"zonelist\">\r\n");
        out.write("                          \r\n");
        out.write("                            <span class=\"align-middle\">Zone List</span>\r\n");
        out.write("                        </a>\r\n");
        out.write("                        \r\n");
        out.write("                         <a class=\"dropdown-item\" href=\"projectlist\">\r\n");
        out.write("                          \r\n");
        out.write("                            <span class=\"align-middle\">Project List</span>\r\n");
        out.write("                        </a>\r\n");
        out.write("                        \r\n");
        out.write("			   </li>\r\n");
        out.write("			  </ul>\r\n");
        out.write("			</div>\r\n");
        out.write("         </li>\r\n");
        out.write("        ");
      }
      if (_jspx_th_sec_005fauthorize_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f3);
      _jspx_th_sec_005fauthorize_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f3, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f4 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f4_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f4.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f4.setParent(null);
      // /WEB-INF/views/header.jsp(87,8) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f4.setAccess("hasRole('CH') ");
      int _jspx_eval_sec_005fauthorize_005f4 = _jspx_th_sec_005fauthorize_005f4.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("         <li  id=\"targetnavid\" class=\"nav-item \" ><a class=\"nav-link \"\r\n");
        out.write("           href=\"set-target\">Target <span class=\"sr-only\"></span> </a></li>\r\n");
        out.write("           \r\n");
        out.write("\r\n");
        out.write("\r\n");
        out.write("               ");
      }
      if (_jspx_th_sec_005fauthorize_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f4);
      _jspx_th_sec_005fauthorize_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f4, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f5 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f5_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f5.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f5.setParent(null);
      // /WEB-INF/views/header.jsp(94,8) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f5.setAccess("!hasRole('ADMIN') ");
      int _jspx_eval_sec_005fauthorize_005f5 = _jspx_th_sec_005fauthorize_005f5.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("\r\n");
        out.write("<!--           <li><a href=\"#\">Dashboard</a></li> -->\r\n");
        out.write("\r\n");
        out.write("   <li  id=\"dashboardNavid\" class=\"nav-item \" ><a class=\"nav-link \"\r\n");
        out.write("           href=\"dashboard\">Dashboard <span class=\"sr-only\"></span> </a></li>\r\n");
        out.write("           \r\n");
        out.write("          <li  id=\"leadsNavid\" class=\"nav-item \" ><a class=\"nav-link \"\r\n");
        out.write("           href=\"leadList\">Leads <span class=\"sr-only\"></span> </a></li>\r\n");
        out.write("\r\n");
        out.write("            <li  id=\"clientListNavid\" class=\"nav-item \" ><a class=\"nav-link \"\r\n");
        out.write("           href=\"clientList\">Client <span class=\"sr-only\"></span> </a></li>\r\n");
        out.write("\r\n");
        out.write("                    <li id=\"reminderListNavid\" class=\"nav-item \"><a\r\n");
        out.write("                        class=\"nav-link \" href=\"reminderList\">Reminder  <span\r\n");
        out.write("                            class=\"position-absolute1 ms-1 top-0 start-100 translate-middle1 badge rounded-pill bg-primary\">\r\n");
        out.write("                                ");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${todayCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write(" <span class=\"visually-hidden\">unread\r\n");
        out.write("                                    messages</span> <span class=\"sr-only\"></span></a></li>\r\n");
        out.write("\r\n");
        out.write("                    <!--  <li><a href=\"clientList\">Client</a></li>\r\n");
        out.write("          <li><a href=\"reminderList\">Reminder</a></li>\r\n");
        out.write(" -->\r\n");
        out.write("  ");
      }
      if (_jspx_th_sec_005fauthorize_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f5);
      _jspx_th_sec_005fauthorize_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f5, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthentication_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_sec_005fauthentication_005f1 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_sec_005fauthentication_005f1_reused = false;
    try {
      _jspx_th_sec_005fauthentication_005f1.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthentication_005f1.setParent(null);
      // /WEB-INF/views/header.jsp(136,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthentication_005f1.setVar("user");
      // /WEB-INF/views/header.jsp(136,8) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthentication_005f1.setProperty("principal");
      int _jspx_eval_sec_005fauthentication_005f1 = _jspx_th_sec_005fauthentication_005f1.doStartTag();
      if (_jspx_th_sec_005fauthentication_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody.reuse(_jspx_th_sec_005fauthentication_005f1);
      _jspx_th_sec_005fauthentication_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthentication_005f1, _jsp_getInstanceManager(), _jspx_th_sec_005fauthentication_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f6 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f6_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f6.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f6.setParent(null);
      // /WEB-INF/views/header.jsp(137,8) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f6.setAccess("isAuthenticated()");
      int _jspx_eval_sec_005fauthorize_005f6 = _jspx_th_sec_005fauthorize_005f6.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("            ");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.firstName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write(' ');
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.lastName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\r\n");
        out.write("        ");
      }
      if (_jspx_th_sec_005fauthorize_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f6);
      _jspx_th_sec_005fauthorize_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f6, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/header.jsp(141,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("authority");
      // /WEB-INF/views/header.jsp(141,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/header.jsp(141,4) '${user.authorities}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${user.authorities}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("        ");
            if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("        ");
            if (_jspx_meth_c_005fif_005f1(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("        ");
            if (_jspx_meth_c_005fif_005f2(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("         ");
            if (_jspx_meth_c_005fif_005f3(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("    ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/header.jsp(142,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:contains(authority, 'ROLE_CH')}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("            <span class=\"fw-semibold d-block\" style=\"font-size: x-small;\">(Country Head)</span>\r\n");
          out.write("        ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/header.jsp(145,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:contains(authority, 'ROLE_ZH')}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("            <span class=\"fw-semibold d-block\" style=\"font-size: x-small;\">(Zonal Head)</span>\r\n");
          out.write("        ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/header.jsp(148,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:contains(authority, 'ROLE_BDE')}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("            <span class=\"fw-semibold d-block\" style=\"font-size: x-small;\">(BDE)</span>\r\n");
          out.write("        ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/header.jsp(151,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:contains(authority, 'ROLE_ADMIN')}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("            <span class=\"fw-semibold d-block\" style=\"font-size: x-small;\">(Admin)</span>\r\n");
          out.write("        ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/views/create-client.jsp(149,15) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/create-client.jsp(149,15) '${departmentList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${departmentList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/create-client.jsp(149,15) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("d");
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("																<option value='");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${d.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('\'');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${d.departmentName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("\r\n");
            out.write("															");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }
}
